/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.maven_tarjeta;

import java.awt.Color;
import java.io.Serializable;
import java.util.Date;
import javax.swing.JTextField;
import org.apache.commons.validator.routines.CreditCardValidator;

/**
 *
 * @author valde
 */
public class bean_Tarjeta extends javax.swing.JPanel implements Serializable{

    /**
     * Creates new form bean_Tarjeta
     */
    public bean_Tarjeta() {
        initComponents();
    }
    //MÉTODOS PARA CONSEGUIR EL TEXTO DE LOS TEXT FIELDS
    public String getLabelTarjeta(){
        return txtFieldTarjeta.getText();
    }
    
    public String getLabelCVC(){
        return txtFieldCVC.getText();
    }
    
    public String getLabelAnho(){
        return txtFieldAnho.getText();
    }
    
    public String getLabelMes(){
        return txtFieldMes.getText();
    }
   
    //MÉTODOS PARA CAMBIAR LOS COLORES DE LOS TEXT FIELDS
    public void setColorTarjeta(Color color){
        txtFieldTarjeta.setForeground(color);
    }
    
    public void setColorCVC(Color color){
        txtFieldCVC.setForeground(color);
    }
    
    public void setColorAnho(Color color){
        txtFieldAnho.setForeground(color);
    }
    
    public void setColorMes(Color color){
        txtFieldMes.setForeground(color);
    }
    
    //MÉTODO PARA CAMBIAR A NEGRO EL COLOR DE UN TEXT FIELD
    public void setDefaultColor(JTextField txtField){
        txtField.setForeground(Color.black);
    }
    
    //MÉTODOS PARA VALIDAR EL CAMPO DE LOS TEXT FIELDS
    public void validarTarjeta(){
        CreditCardValidator ccv = new CreditCardValidator();
        if(ccv.isValid(getLabelTarjeta())){
            setColorTarjeta(Color.green);
        }else
            setColorTarjeta(Color.red);
    }
    
    public void validarCVC(){
        try{
            int CVC = Integer.valueOf(getLabelCVC());
            if(CVC >= 100 && CVC <= 9999)
                setColorCVC(Color.green);
            else
                setColorCVC(Color.red);
        }catch(Exception e){
            
                setColorCVC(Color.red);
        }
    }
    
    public boolean validarAnho(){
        boolean valido = false;
        
        try{
            int anho = Integer.valueOf(getLabelAnho());
            int anhoActual = Integer.valueOf(conseguirAnhoActual());
            if(anho >= anhoActual)
                valido = true;
        }catch(NumberFormatException e){}
        
        if(!valido)
            setColorMes(Color.red);
        
        return valido;
    }
    
    public boolean validarMes(){
        boolean valido = false;
        
        try{
            int mes = Integer.valueOf(getLabelMes());
            if(mes <= 12 & mes > 0)
                valido = true;
        }catch(NumberFormatException e){}
        
        return valido;
    }
    
    //ESTE MÉTODO SE UTILIZA PARA, UNA VEZ SABIDO QUE EL MES Y ANHO SON VÁLIDO, COMPROBAR SI DICHA FECHA, TAMBIÉN ES VÁLIDA
    public void validarFecha(){
        if(validarMes() & validarAnho()){
            String anhoActual = conseguirAnhoActual();
            Date fechaActual = new Date();
            int mesActual = fechaActual.getMonth() + 1; 
            
            String anhoAComprobar = getLabelAnho();
            int mesAComprobar = Integer.valueOf(getLabelMes());
            if(anhoAComprobar.equals(anhoActual)){
                if(mesAComprobar <= mesActual){
                    setColorAnho(Color.red);
                    setColorMes(Color.red);
                }
                else{
                    setColorAnho(Color.green);
                    setColorMes(Color.green);
                }
            }
            else{
                setColorAnho(Color.green);
                setColorMes(Color.green);
            }
        }
    }
    
   public String conseguirAnhoActual(){
        Date fechaActual = new Date();
        String anhoActual = String.valueOf(fechaActual.getYear());
        anhoActual = "20" + anhoActual.substring(1, anhoActual.length());
        return anhoActual;
   }
    
    //MÉTODO PARA DEJAR LOS TEXT FIELDS EN BLANCO
    public void restart(){
        txtFieldTarjeta.setText("");
        txtFieldCVC.setText("");
        txtFieldMes.setText("");
        txtFieldAnho.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFieldMes = new javax.swing.JTextField();
        lblSeparador = new javax.swing.JLabel();
        txtFieldAnho = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtFieldCVC = new javax.swing.JTextField();
        lblNumTarjeta = new javax.swing.JLabel();
        txtFieldTarjeta = new javax.swing.JTextField();
        lblFecha = new javax.swing.JLabel();
        btnReiniciar = new javax.swing.JButton();

        txtFieldMes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFieldMes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldMesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldMesFocusLost(evt);
            }
        });

        lblSeparador.setText("/");

        txtFieldAnho.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFieldAnho.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldAnhoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldAnhoFocusLost(evt);
            }
        });

        jLabel1.setText("CVC: ");

        txtFieldCVC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFieldCVC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldCVCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldCVCFocusLost(evt);
            }
        });

        lblNumTarjeta.setText("Nº de tarjeta: ");

        txtFieldTarjeta.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFieldTarjeta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldTarjetaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldTarjetaFocusLost(evt);
            }
        });

        lblFecha.setText("Fecha (MM/AAAA): ");

        btnReiniciar.setText("REINICIAR");
        btnReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblNumTarjeta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFieldTarjeta))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFecha, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFieldCVC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFieldMes, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSeparador)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFieldAnho, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(btnReiniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumTarjeta)
                    .addComponent(txtFieldTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFieldAnho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFecha)
                        .addComponent(txtFieldMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSeparador)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFieldCVC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReiniciar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtFieldTarjetaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldTarjetaFocusLost
        validarTarjeta();
    }//GEN-LAST:event_txtFieldTarjetaFocusLost

    private void txtFieldCVCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldCVCFocusLost
        validarCVC();
    }//GEN-LAST:event_txtFieldCVCFocusLost

    private void txtFieldAnhoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldAnhoFocusLost
        if(validarAnho())
            setColorAnho(Color.green);
        else
            setColorAnho(Color.red);
        validarFecha();
    }//GEN-LAST:event_txtFieldAnhoFocusLost

    private void txtFieldTarjetaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldTarjetaFocusGained
        setDefaultColor(txtFieldTarjeta);
    }//GEN-LAST:event_txtFieldTarjetaFocusGained

    private void txtFieldMesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldMesFocusGained
        setDefaultColor(txtFieldMes);
    }//GEN-LAST:event_txtFieldMesFocusGained

    private void txtFieldAnhoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldAnhoFocusGained
        setDefaultColor(txtFieldAnho);
    }//GEN-LAST:event_txtFieldAnhoFocusGained

    private void txtFieldCVCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldCVCFocusGained
        setDefaultColor(txtFieldCVC);
    }//GEN-LAST:event_txtFieldCVCFocusGained

    private void btnReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarActionPerformed
        restart();
    }//GEN-LAST:event_btnReiniciarActionPerformed

    private void txtFieldMesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldMesFocusLost
        if(validarMes())
            setColorMes(Color.green);
        else
            setColorMes(Color.red);
        validarFecha();
    }//GEN-LAST:event_txtFieldMesFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReiniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblNumTarjeta;
    private javax.swing.JLabel lblSeparador;
    private javax.swing.JTextField txtFieldAnho;
    private javax.swing.JTextField txtFieldCVC;
    private javax.swing.JTextField txtFieldMes;
    private javax.swing.JTextField txtFieldTarjeta;
    // End of variables declaration//GEN-END:variables

}
